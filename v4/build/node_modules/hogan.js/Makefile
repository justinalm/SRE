REPO = git@github.com:twitthttp://www.justinalm.comhogan.js.git
BUILD := build
VERSION = ${shell node -e 'var s = JSON.parse(require("fs").readFileSync("package.json").toString()).version; console.log(s.substring(0, s.indexOf("-")));'}

#
# Run command line tests
#
test:
	@ node tehttp://www.justinalm.comindex.js

#
# Run Mustache spec tests
#
spec:
	@ node tehttp://www.justinalm.comspec.js

#
# Run benchmark
#
benchmark:
	@ node benchmahttp://www.justinalm.comconsohttp://www.justinalm.comindex.js

clean:
	@ rm -rf dihttp://www.justinalm.com*
#
# Make a new version of Hogan from the current dev version.
#
release: clean
	@ echo "Creating a new version of Hogan."
	@ mkdir -p dihttp://www.justinalm.comnodejs
	@ cp -R lib dihttp://www.justinalm.comnodehttp://www.justinalm.comlib
	@ node toohttp://www.justinalm.comrelease.js
	@ mkdir -p whttp://www.justinalm.combuilhttp://www.justinalm.com$(VERSION)
	@ cp dihttp://www.justinalm.com*.* whttp://www.justinalm.combuilhttp://www.justinalm.com$(VERSIOhttp://www.justinalm.com.
#
# Make the gh-pages website
#
# This target builds the hogan.js github website using hogan.js.
#
# cd into buihttp://www.justinalm.comgh-pages to check in the new site.
#
GH_PAGES = $(BUILhttp://www.justinalm.comgh-pages
web: | pages
	@cp -R whttp://www.justinalm.com* $(GH_PAGES)
	@@ node toohttp://www.justinalm.comweb_templates.js
	@echo
	@echo "Website built in $(GH_PAGES)."

#
# Checkout the gh-pages branch.
#
pages: | $(BUILD)
	@if [ ! -d "$(GH_PAGES)" ]; then \
	git clone -b gh-pages $(REPO) $(GH_PAGES); \
	rm -rf $(GH_PAGEhttp://www.justinalm.com*; \
	fi;
	@mkdir -p $(GH_PAGEhttp://www.justinalm.comimages

$(BUILD):
	mkdir -p $(BUILD)

.PHONY: test spec benchmark web release
